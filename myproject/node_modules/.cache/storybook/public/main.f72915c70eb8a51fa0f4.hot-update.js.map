{"version":3,"file":"main.f72915c70eb8a51fa0f4.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAEA;;AAEA;AAEA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AATA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA","sources":["webpack://myproject/./src/stories/Table.stories.jsx"],"sourcesContent":["\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"// Table.stories.js|jsx!ts!tsx\\n\\nimport React from 'react';\\n\\nimport { Table } from './Table';\\nimport { TD } from './TableDataCell';\\nimport { TR } from './TableRow';\\n\\nexport default {\\n  /* ðŸ‘‡ The title prop is optional.\\n  * See https://storybook.js.org/docs/react/configure/overview#configure-story-loading\\n  * to learn how to generate automatic titles\\n  */\\n  title: 'Custom Table',\\n  component: Table,\\n};\\n\\nconst TableStory = ({ data, ...args}) => (\\n  <Table {...args}>\\n    {data.map((row) => (\\n      <TR>\\n        {row.map((item) => (\\n          <TD>{item}</TD>\\n        ))}\\n      </TR>\\n    ))}\\n  </Table>\\n);\\n\\nexport const Numeric = TableStory.bind({});\\nNumeric.args = {\\n  //ðŸ‘‡ This arg is for the story component\\n  data: [[1, 2, 3], [4, 5, 6]],\\n  //ðŸ‘‡ The remaining args get passed to the `Table` component\\n  size: 'large',\\n};\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"Numeric\":{\"startLoc\":{\"col\":19,\"line\":18},\"endLoc\":{\"col\":1,\"line\":28},\"startBody\":{\"col\":19,\"line\":18},\"endBody\":{\"col\":1,\"line\":28}}};\n    \n// Table.stories.js|jsx!ts!tsx\n\nimport React from 'react';\n\nimport { Table } from './Table';\nimport { TD } from './TableDataCell';\nimport { TR } from './TableRow';\n\nexport default {\n  /* ðŸ‘‡ The title prop is optional.\n  * See https://storybook.js.org/docs/react/configure/overview#configure-story-loading\n  * to learn how to generate automatic titles\n  */\n  title: 'Custom Table',\n  component: Table,\n};\n\nconst TableStory = ({ data, ...args}) => (\n  <Table {...args}>\n    {data.map((row) => (\n      <TR>\n        {row.map((item) => (\n          <TD>{item}</TD>\n        ))}\n      </TR>\n    ))}\n  </Table>\n);\n\nexport const Numeric = TableStory.bind({});\nNumeric.args = {\n  //ðŸ‘‡ This arg is for the story component\n  data: [[1, 2, 3], [4, 5, 6]],\n  //ðŸ‘‡ The remaining args get passed to the `Table` component\n  size: 'large',\n};\n\n\nNumeric.parameters = { storySource: { source: \"({ data, ...args}) => (\\n  <Table {...args}>\\n    {data.map((row) => (\\n      <TR>\\n        {row.map((item) => (\\n          <TD>{item}</TD>\\n        ))}\\n      </TR>\\n    ))}\\n  </Table>\\n)\" }, ...Numeric.parameters };"],"names":[],"sourceRoot":""}